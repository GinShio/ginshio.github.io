<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0">
    <channel>
        <title>Mail - 标签 - iris</title>
        <link>https://blog.ginshio.org/tags/mail/</link>
        <description>Mail - 标签 - iris</description>
        <generator>Hugo -- gohugo.io</generator><language>zh-cn</language><managingEditor>ginshio78@gmail.com (GinShio)</managingEditor>
            <webMaster>ginshio78@gmail.com (GinShio)</webMaster><lastBuildDate>Mon, 16 Nov 2020 22:43:53 &#43;0800</lastBuildDate><atom:link href="https://blog.ginshio.org/tags/mail/" rel="self" type="application/rss+xml" /><item>
    <title>搭建邮箱服务器</title>
    <link>https://blog.ginshio.org/2020/mail_server/</link>
    <pubDate>Mon, 16 Nov 2020 22:43:53 &#43;0800</pubDate><author>
                        <name>GinShio</name><uri>https://blog.ginshio.org/</uri><email>ginshio78@gmail.com</email></author><guid>https://blog.ginshio.org/2020/mail_server/</guid>
    <description><![CDATA[搭建邮局服务器的想法之前一直都有，不过一直没有尝试，国庆的时候从阿里云换到了腾讯云的时候尝试直接使用 postfix 和 dovecot 搭建，尝试了大概3天被劝退了，重新使用现成的解决方案也算终于搭建好了，可以愉快的使用自建邮箱了 (可以愉快的装逼了
信息 更新了 mailu 的搭建，虽然 mailu 相比 mailcow 可以使用宿主机的数据库，不过 mailu 配置 SMTPS / IMAPS / POP3S 不如 mailcow 简单方便，也没怎么研究，目前没有切换到 mailu 的打算 警告 打算在更换服务器之后不再维护邮箱服务，装逼不存在的 部署开始搭建服务器，以下采用域名 (example.com) 和 IP (1.1.1.1)，安装在 /mailcow，使用主机的nginx反向代理，部署之前我们首先定义一些Shell变量，以便之后使用，请根据自己的需求更改
1 2 3 4 5 6 7 8 9 10 11 12 13 14 path_to=&#34;/path/to&#34; mailcow_path=&#34;${path_to}/mailcow&#34; # mailcow 所在目录 mailu_path=&#34;${path_to}/mailu&#34; mail_host=&#34;mail.example.com&#34; mail_ip=&#34;1.1.1.1&#34; db_user=&#34;example_user&#34; # 数据库用户 (Mailu使用宿主机PostgreSQL时使用) db_passwd=&#34;example_password&#34; # 数据库密码 (Mailu使用宿主机PostgreSQL时使用) db_name=&#34;example_db&#34; # 数据库名称 (Mailu使用宿主机PostgreSQL时使用) http_port=&#34;8080&#34; https_port=&#34;8443&#34; cert_path=&#34;/ssl/path/to/cert/&#34; # 证书存放目录 cert_file=&#34;${cert_path}/cert.]]></description>
</item></channel>
</rss>
