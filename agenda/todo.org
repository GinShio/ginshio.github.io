* Personal
:properties:
:category: personal
:end:

* Interview
:properties:
:category: interview
:end:

** DONE [#A] 百度 - 后端开发工程师 :baidu:
SCHEDULED: <2020-10-24 Sat 14:30> DEADLINE: <2020-10-24 Sat 17:30>
  :properties:
  :url: https://interview.nowcoder.com/interview/1244511/interviewee?code=Y6XfurGq#userCode
  :end:
*** 一面
vector / list 区别
虚函数 / 纯虚函数
new / malloc 异同
如何实现final类
Golang 如何实现继承
进程 / 线程 区别
死锁的必要条件
restful 是什么
获取100以内的所有素数
思维: 10个红球10个篮球, 将其放入两个袋子中, 分别从两个袋子中摸出一个球, 问如何放摸出两个红球的概率最大
*** 二面
C++11 / 14 新特性
智能指针
智能指针的循环引用
哈希表冲突及解决
哈希表如何按插入顺序输出
线程同步的方法
如何实现线程安全的哈希表 (思路)
学习STL收获了什么
学习过 Boost / ... 之类的吗
求二叉树的深度 (迭代)
项目 (登录验证 / 数据存储 / 数据库选择)

** DONE [#A] 字节跳动 - 后端开发工程师 (教育业务岗位) :bytedance:
SCHEDULED: <2021-03-26 Mon 17:00> DEADLINE: <2021-03-26 Mon 18:00>
  :properties:
  :url: https://people.toutiaocloud.com/hire/bridge/video/interviewee/685d1e0b-18ed-439a-851f-f4d0749c57b1​
  :end:
*** DONE 一面
# SCHEDULED: [2021-03-22 Mon 15:00] DEADLINE: [2021-03-22 Mon 16:00]
  - C++ 编译过程分为哪些步骤
  - =const= / =#define= 有什么区别
  - 说明静态链接、动态链接区别
  - 动态链接加载时，会加载到程序的哪个分区
  - 操作系统分段式、分页式管理
  - 进程的概念
    - 进程间的通信方式
  - 网络协议分层
  - TCP、UDP的区别、使用场景
    - TCP 是如何保证可靠的
    - TCP 流量控制、拥塞控制
  - HTTP 的传输方式，内容
    - HTTPS 与 HTTP 的区别
    - HTTPS 是如何实现的
    - 怎么验证证书是否属于域名
  - 算法：leetcode 82
*** DONE 二面
# SCHEDULED: [2021-03-24 Mon 17:00] DEADLINE: [2021-03-24 Mon 18:00]
  - 讲讲项目
  - GoLang 多线程与 C++ 的区别
  - GoLang 多线程数据同步的方法
    - chan 的底层
    - C++ 中对应的结构
  - 为什么使用多线程池化技术
  - 数据库的索引
  - 了解微服务吗，用过什么 RPC 框架
  - Linux 下你觉得做过最有趣的事情
  - 算法：给定一个整型数组，数组元素随机无序的，要求打印出所有元素右边第一个大于该元素的值
    示例：输入 {3,4,3,2,4,6,5,7}；输出 {4,6,4,4,6,7,7,-1}
*** DONE 三面
# SCHEDULED: [2021-03-26 Mon 17:00] DEADLINE: [2021-03-26 Mon 18:00]
  - 项目
    - 拆分、抽象
    - 关注全局，而非自己负责的部分
  - Gin 框架
    - 如何绑定 JSON 数据
    - 如何实现 GET / POST 接口
  - 如何实现栈，并在 O1 的时间复杂度内完成 pop()、push()、get_max()
  - 证明最小生成树算法的正确性
  - 自己平时如何学习、有哪些不足
  - 算法：leetcode 236

** DONE [#A] 美团 - CPP 存储 :meituan:
SCHEDULED: <2021-04-25 Sun 19:00> DEADLINE: <2021-04-25 Sun 20:00>
  :properties:
  :url: https://interview.nowcoder.com/interview/33444324/interviewee?code=J5wR2Zsv#userCode
  :examination_url: https://meituan.acmcoder.com/cand/login?gwc2jmy5
  :examination_account: meituan
  :examination_password: hkftvd
  :end:
*** DONE 一面
# SCHEDULED: [2021-04-13 Tue 17:00] DEADLINE: [2021-04-13 Tue 18:24]
  - STL
    - 移动构造函数的实现
    - size 函数的时间复杂度
    - 分配器的作用
    - 迭代器的失效条件
    - 下标运算符是否线程安全
    - deque 迭代器 trait
  - POD 类型
  - new 运算符
    - 两种 new 的区别
    - 是否可以针对类型重载 new
    - 定位 new 是否会 crash
  - 异常
    - 构造函数 / 析构函数是否异常安全
    - 无异常抛出的关键字是什么
  - C++ 语言基础
    - 4 种强制类型转换
    - const 的作用，修饰成员函数时的约束
    - volatile 的作用，修饰的变量是否线程安全
  - 原子操作的类型、内存序
  - 线程同步机制 (condition_variable)
    - notify_one 与 notify_all 的区别
    - 能否只提供一个 notify_all
    - 虚假唤醒是什么，为什么发生
  - 计算机网络
    - TCP / UDP 的区别
    - TCP 连接关闭步骤
    - 一般请求关闭连接由服务器、客户端哪一方发起
    - TCP 慢启动与快重传
    - TCP 超时与用户层面超时的区别
  - IO 多路复用
    - select / poll / epoll 区别
    - epoll LT / ET
    - 红黑树和AVL树的区别
  - 在调用 write() 时是否立即写入
  - 10GB 文件，每行一个数字，内存大小仅 512 MB，如何完全排序
  - 算法：leetcode 25
*** DONE 二面
# SCHEDULED: [2021-04-19 Mon 19:00] DEADLINE: [2021-04-19 Mon 20:00]
  - read() 和 fread() 的区别
  - 智能指针引入的作用是什么
  - 有哪些智能指针，分别有什么区别
  - 虚拟内存是什么，为什么使用
  - 僵尸进程是什么，产生的条件
  - 父进程如何得知子进程退出
  - 父进程占用 nG 内存，创建子进程之后父子进程共占用多少内存
  - 哪两个信号是无法捕获的
  - 超多的 n kb 小文件会对操作系统产生影响吗
  - TCP 三次握手
  - SYN FLOOD
  - 数据库事务的特性
  - 数据库的隔离级别
  - 算法：n个男孩和n个女孩排队，要求每个位置前面的的女孩数目大于等于男孩数目，打印出所有的排队方式。比如n=2，只有下列两种排队方式(0为女孩，1位男孩)： [0 0 1 1] [0 1 0 1]

* Contset
:properties:
:category: contest
:end:

** DONE [#A] LCCUP '21 Spring :leetcode:
SCHEDULED: <2021-04-05 Mon 15:00+02:30>
  :properties:
  :url: https://leetcode-cn.com/contest/season/2021-spring/
  :solo_ranking: https://leetcode-cn.com/contest/season/2021-spring/ranking/solo/
  :solo_rank: 684 / 9932
  :end:
  - [X] 1 ([[https://leetcode-cn.com/problems/4xy4Wx/][LCCUP 28]])
  - [X] 2 ([[https://leetcode-cn.com/problems/SNJvJP/][LCCUP 29]])
  - [X] 3 ([[https://leetcode-cn.com/problems/p0NxJO/][LCCUP 30]])
  - [ ] 4 ([[https://leetcode-cn.com/problems/Db3wC1/][LCCUP 31]])
  - [ ] 5 ([[https://leetcode-cn.com/problems/t3fKg1/][LCCUP 32]])

** DONE [#A] LCCUP '21 Fall :leetcode:
SCHEDULED: <2021-09-25 Sat 15:00+03:00>
  :properties:
  :url: https://leetcode-cn.com/contest/season/2021-fall/
  :solo_ranking: https://leetcode-cn.com/contest/season/2021-fall/ranking/solo/
  :solo_rank: 2498 / 8176
  :team_ranking: https://leetcode-cn.com/contest/season/2021-fall/ranking/team/
  :team_rank: 1182 / 2641
  :end:
  - [1/5] Solo
    - [X] 1 ([[https://leetcode-cn.com/problems/0jQkd0/][LCCUP 39]])
    - [ ] 2 ([[https://leetcode-cn.com/problems/uOAnQW/][LCCUP 40]])
    - [ ] 3 ([[https://leetcode-cn.com/problems/fHi6rV/][LCCUP 41]])
    - [ ] 4 ([[https://leetcode-cn.com/problems/vFjcfV/][LCCUP 42]])
    - [ ] 5 ([[https://leetcode-cn.com/problems/Y1VbOX/][LCCUP 43]])
  - [1/6] Team
    - [X] 1 ([[https://leetcode-cn.com/problems/sZ59z6/][LCCUP 44]])
    - [ ] 2 ([[https://leetcode-cn.com/problems/kplEvH/][LCCUP 45]])
    - [ ] 3 ([[https://leetcode-cn.com/problems/05ZEDJ/][LCCUP 46]])
    - [ ] 4 ([[https://leetcode-cn.com/problems/oPs9Bm/][LCCUP 47]])
    - [ ] 5 ([[https://leetcode-cn.com/problems/fsa7oZ/][LCCUP 48]])
    - [ ] 6 ([[https://leetcode-cn.com/problems/K8GULz/][LCCUP 49]])

** KILL [#A] LCCUP '22 Spring :leetcode:
CLOSED: [2024-02-18 Sun 15:11] SCHEDULED:
<2022-04-16 Sat 15:00-17:30>
  :properties:
  :url: https://leetcode-cn.com/contest/season/2022-spring/
  :solo_ranking: https://leetcode-cn.com/contest/season/2022-spring/ranking/solo/
  :solo_rank: none
  :team_ranking: https://leetcode-cn.com/contest/season/2022-spring/ranking/team/
  :team_rank: none
  :end:

* Daily
:properties:
:category: daily
:end:

** TODO [#C] 每日一题 :leetcode:
SCHEDULED: <2022-04-04 Mon 00:00-23:59 ++1d>
  :properties:
  :url: https://leetcode-cn.com/problemset/all/
  :last_repeat: [2021-09-28 Tue 12:01]
  :end:

* Weekly
:properties:
:category: weekly
:end:

** TODO 周赛 :leetcode:
SCHEDULED: <2022-04-10 Sun 10:30-12:00 ++1w>
  :properties:
  :category: contest
  :url: https://leetcode-cn.com/contest/
  :last_repeat: [2021-09-19 Sun 13:43]
  :end:

  - State "DONE"       from "TODO"       [2021-09-19 Sun 13:43]   259 [1415/3774]  5875(AC), 5876(AC), 5877, 5878
  - State "DONE"       from "TODO"       [2021-09-12 Sun 14:15]   258 [1221/4518]  2000(AC), 2001(AC), 2002, 2003
  - State "DONE"       from "TODO"       [2021-09-05 Sun 23:43]   257 [2193/4277]  1995(AC), 1996, 1997, 1998
  - State "DONE"       from "TODO"       [2021-08-15 Sun 16:50]   254 [3059/4348]  1967(AC), 1968, 1969, 1970
  - State "DONE"       from "TODO"       [2021-08-08 Sun 12:32]   253 [2923/4569]  1961(AC), 1962, 1963, 1964
  - State "DONE"       from "TODO"       [2021-08-01 Sun 14:32]   252 [3228/4646]  1952(AC), 1953, 1954, 1955
  - State "DONE"       from "TODO"       [2021-07-25 Sun 12:18]   251 [1836/4746]  1945(AC), 1946(AC), 1947, 1948
  - State "DONE"       from "TODO"       [2021-07-18 Sun 12:23]   250 [1436/4314]  1935(AC), 1936(AC), 1937, 1938
  - State "DONE"       from "TODO"       [2021-05-02 Sun 14:38]   239 [1902/3905]  1848(AC), 1849, 1850, 1851
  - State "DONE"       from "TODO"       [2021-04-25 Sun 12:14]   238 [1059/3977]  1837(AC), 1838, 1839(AC), 1840
  - State "DONE"       from "TODO"       [2021-04-18 Sun 12:01]   237 [1021/4576]  1832(AC), 1833(AC), 1834(TLE), 1835(AC)
  - State "DONE"       from "TODO"       [2021-04-11 Sun 13:24]   236 [2118/5112]  1822(AC), 1823(AC), 1824, 1825
  - State "DONE"       from "TODO"       [2021-04-04 Sun 14:30]   235 [799/4493]   1816(AC), 1817(AC), 1818(AC), 1819(TLE)
  - State "DONE"       from "TODO"       [2021-03-22 Mon 17:32]   233 [1351/5009]  1800(AC), 1801(AC), 1802, 1803

** TODO 双周赛 :leetcode:
SCHEDULED: <2022-04-16 Sat 22:30-24:00 ++2w>
:properties:
  :category: contest
  :url: https://leetcode-cn.com/contest/
  :last_repeat: [2021-09-19 Sun 00:14]
  :end:

  - State "DONE"       from "TODO"       [2021-09-19 Sun 00:14]   61 [1079/2534] 5859(AC), 5860(AC), 5861, 5862
  - State "DONE"       from "TODO"       [2021-08-22 Sun 00:53]   59 [763/3030]  1974(AC), 1975(AC), 1976, 1977
  - State "DONE"       from "STRT"       [2021-08-08 Sun 00:23]   58 [1116/2889] 1957(AC), 1958(AC), 1959, 1960
  - State "DONE"       from "TODO"       [2021-07-24 Sat 23:55]   57 [522/2933]  1941(AC), 1942(AC), 1943(AC), 1944
  - State "DONE"       from "TODO"       [2021-05-02 Sun 13:50]   51 [1052/2675] 1844(AC), 1845(AC), 1846(AC), 1847
  - State "DONE"       from "TODO"       [2021-04-18 Sun 00:54]   50 [583/3607]  1827(AC), 1828(AC), 1829(AC), 1830
  - State "DONE"       from "TODO"       [2021-04-04 Sun 00:00]   49 [635/3193]  1812(AC), 1813(AC), 1814(AC), 1815

* Monthly
:properties:
:category: monthly
:end:
